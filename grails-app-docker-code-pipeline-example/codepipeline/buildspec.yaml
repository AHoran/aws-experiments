version: 0.2

env:
  exported-variables:
    - CODEBUILD_BUILD_NUMBER

phases:
  pre_build:
    commands:
      - echo ${AWS_ACCOUNT_ID}
      - echo ${AWS_REGION}
      - echo ${CODEBUILD_BUILD_NUMBER}
      - echo ${CODEBUILD_SRC_DIR}
      - echo ${WEB_IMAGE_REPO_NAME}
      - echo ${APP_IMAGE_REPO_NAME}      
      
      - apt-get upgrade
      - apt-get update

  build:
    commands:
      - docker build -t ${APP_IMAGE_REPO_NAME}:${CODEBUILD_BUILD_NUMBER}  ./grails-app-docker-code-pipeline-example/app/
      - docker tag ${APP_IMAGE_REPO_NAME}:${CODEBUILD_BUILD_NUMBER} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${APP_IMAGE_REPO_NAME}:${CODEBUILD_BUILD_NUMBER}

      - docker build -t ${WEB_IMAGE_REPO_NAME}:${CODEBUILD_BUILD_NUMBER}  ./grails-app-docker-code-pipeline-example/nginx/
      - docker tag ${WEB_IMAGE_REPO_NAME}:${CODEBUILD_BUILD_NUMBER} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${WEB_IMAGE_REPO_NAME}:${CODEBUILD_BUILD_NUMBER}

  post_build:
    commands:
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
      - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${WEB_IMAGE_REPO_NAME}:${CODEBUILD_BUILD_NUMBER}
      - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${APP_IMAGE_REPO_NAME}:${CODEBUILD_BUILD_NUMBER}
      
artifacts:    
  files:
    - ./grails-app-docker-code-pipeline-example/cloudformationtemplates/template-private-subnet.yaml
    - ./grails-app-docker-code-pipeline-example/codepipeline/pipeline-stack.yaml