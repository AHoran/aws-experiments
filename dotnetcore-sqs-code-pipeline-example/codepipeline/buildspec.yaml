version: 0.2

env:
  exported-variables:
    - CODEBUILD_BUILD_NUMBER

phases:
  install:
    runtime-versions:
      dotnet: 3.1
    commands:
      - dotnet tool install -g dotnet-format
      - dotnet tool install -g Amazon.Lambda.Tools
      - export PATH="$PATH:/root/.dotnet/tools"

  pre_build:
    commands:
      - echo ${AWS_REGION}
      - echo ${BUILD_OUTPUT_BUCKET}
      - echo ${CODEBUILD_BUILD_NUMBER}
      - echo ${CODEBUILD_SRC_DIR}
      
      - apt-get upgrade
      - apt-get update

  build:
    commands:

      - dotnet format ./dotnetcore-sqs-code-pipeline-example/api/api.sln --check
      - dotnet restore ./dotnetcore-sqs-code-pipeline-example/api/api.sln
      - dotnet build ./dotnetcore-sqs-code-pipeline-example/api/api.sln
      - dotnet test ./dotnetcore-sqs-code-pipeline-example/api/test/HealthAPI.Tests/HealthAPI.Tests.csproj --collect:"XPlat Code Coverage" /p:CoverletOutputFormat=cobertura
      - dotnet lambda package -c release -pl ${CODEBUILD_SRC_DIR}/dotnetcore-sqs-code-pipeline-example/api/src/HealthAPI -o ${CODEBUILD_SRC_DIR}/dotnetcore-sqs-code-pipeline-example/lambda_build_output.zip
      - aws s3 cp ./dotnetcore-sqs-code-pipeline-example/lambda_build_output.zip s3://${BUILD_OUTPUT_BUCKET}/lambda/build_${CODEBUILD_BUILD_NUMBER}.zip
      
reports:
  jacoco-report:
    files:
      - './dotnetcore-sqs-code-pipeline-example/api/test/HealthAPI.Tests/TestResults/**/*.xml'
    file-format: 'COBERTURAXML'

artifacts:    
  files:
    - ./dotnetcore-sqs-code-pipeline-example/cloudformationtemplates/template.yaml
    - ./dotnetcore-sqs-code-pipeline-example/codepipeline/pipeline-stack.yaml
    - ./dotnetcore-sqs-code-pipeline-example/codepipeline/buildspec.yaml